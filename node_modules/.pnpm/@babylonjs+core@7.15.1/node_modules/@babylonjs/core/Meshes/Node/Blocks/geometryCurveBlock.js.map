{"version":3,"file":"geometryCurveBlock.js","sourceRoot":"","sources":["../../../../../../dev/core/src/Meshes/Node/Blocks/geometryCurveBlock.ts"],"names":[],"mappings":"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","sourcesContent":["import { RegisterClass } from \"../../../Misc/typeStore\";\r\nimport { NodeGeometryBlock } from \"../nodeGeometryBlock\";\r\nimport { NodeGeometryBlockConnectionPointTypes } from \"../Enums/nodeGeometryConnectionPointTypes\";\r\nimport type { NodeGeometryConnectionPoint } from \"../nodeGeometryBlockConnectionPoint\";\r\nimport type { float } from \"core/types\";\r\nimport { Vector2, Vector3, Vector4 } from \"core/Maths/math.vector\";\r\nimport { PropertyTypeForEdition, editableInPropertyPage } from \"core/Decorators/nodeDecorator\";\r\n\r\n/**\r\n * Types of curves supported by the Curve block\r\n */\r\nexport enum GeometryCurveBlockTypes {\r\n    /** EaseInSine */\r\n    EaseInSine,\r\n    /** EaseOutSine */\r\n    EaseOutSine,\r\n    /** EaseInOutSine */\r\n    EaseInOutSine,\r\n    /** EaseInQuad */\r\n    EaseInQuad,\r\n    /** EaseOutQuad */\r\n    EaseOutQuad,\r\n    /** EaseInOutQuad */\r\n    EaseInOutQuad,\r\n    /** EaseInCubic */\r\n    EaseInCubic,\r\n    /** EaseOutCubic */\r\n    EaseOutCubic,\r\n    /** EaseInOutCubic */\r\n    EaseInOutCubic,\r\n    /** EaseInQuart */\r\n    EaseInQuart,\r\n    /** EaseOutQuart */\r\n    EaseOutQuart,\r\n    /** EaseInOutQuart */\r\n    EaseInOutQuart,\r\n    /** EaseInQuint */\r\n    EaseInQuint,\r\n    /** EaseOutQuint */\r\n    EaseOutQuint,\r\n    /** EaseInOutQuint */\r\n    EaseInOutQuint,\r\n    /** EaseInExpo */\r\n    EaseInExpo,\r\n    /** EaseOutExpo */\r\n    EaseOutExpo,\r\n    /** EaseInOutExpo */\r\n    EaseInOutExpo,\r\n    /** EaseInCirc */\r\n    EaseInCirc,\r\n    /** EaseOutCirc */\r\n    EaseOutCirc,\r\n    /** EaseInOutCirc */\r\n    EaseInOutCirc,\r\n    /** EaseInBack */\r\n    EaseInBack,\r\n    /** EaseOutBack */\r\n    EaseOutBack,\r\n    /** EaseInOutBack */\r\n    EaseInOutBack,\r\n    /** EaseInElastic */\r\n    EaseInElastic,\r\n    /** EaseOutElastic */\r\n    EaseOutElastic,\r\n    /** EaseInOutElastic */\r\n    EaseInOutElastic,\r\n}\r\n\r\n/**\r\n * Block used to apply curve operation\r\n */\r\nexport class GeometryCurveBlock extends NodeGeometryBlock {\r\n    /**\r\n     * Gets or sets the type of the curve applied by the block\r\n     */\r\n    @editableInPropertyPage(\"Type\", PropertyTypeForEdition.List, \"ADVANCED\", {\r\n        notifiers: { rebuild: true },\r\n        options: [\r\n            { label: \"EaseInSine\", value: GeometryCurveBlockTypes.EaseInSine },\r\n            { label: \"EaseOutSine\", value: GeometryCurveBlockTypes.EaseOutSine },\r\n            { label: \"EaseInOutSine\", value: GeometryCurveBlockTypes.EaseInOutSine },\r\n            { label: \"EaseInQuad\", value: GeometryCurveBlockTypes.EaseInQuad },\r\n            { label: \"EaseOutQuad\", value: GeometryCurveBlockTypes.EaseOutQuad },\r\n            { label: \"EaseInOutQuad\", value: GeometryCurveBlockTypes.EaseInOutQuad },\r\n            { label: \"EaseInCubic\", value: GeometryCurveBlockTypes.EaseInCubic },\r\n            { label: \"EaseOutCubic\", value: GeometryCurveBlockTypes.EaseOutCubic },\r\n            { label: \"EaseInOutCubic\", value: GeometryCurveBlockTypes.EaseInOutCubic },\r\n            { label: \"EaseInQuart\", value: GeometryCurveBlockTypes.EaseInQuart },\r\n            { label: \"EaseOutQuart\", value: GeometryCurveBlockTypes.EaseOutQuart },\r\n            { label: \"EaseInOutQuart\", value: GeometryCurveBlockTypes.EaseInOutQuart },\r\n            { label: \"EaseInQuint\", value: GeometryCurveBlockTypes.EaseInQuint },\r\n            { label: \"EaseOutQuint\", value: GeometryCurveBlockTypes.EaseOutQuint },\r\n            { label: \"EaseInOutQuint\", value: GeometryCurveBlockTypes.EaseInOutQuint },\r\n            { label: \"EaseInExpo\", value: GeometryCurveBlockTypes.EaseInExpo },\r\n            { label: \"EaseOutExpo\", value: GeometryCurveBlockTypes.EaseOutExpo },\r\n            { label: \"EaseInOutExpo\", value: GeometryCurveBlockTypes.EaseInOutExpo },\r\n            { label: \"EaseInCirc\", value: GeometryCurveBlockTypes.EaseInCirc },\r\n            { label: \"EaseOutCirc\", value: GeometryCurveBlockTypes.EaseOutCirc },\r\n            { label: \"EaseInOutCirc\", value: GeometryCurveBlockTypes.EaseInOutCirc },\r\n            { label: \"EaseInBack\", value: GeometryCurveBlockTypes.EaseInBack },\r\n            { label: \"EaseOutBack\", value: GeometryCurveBlockTypes.EaseOutBack },\r\n            { label: \"EaseInOutBack\", value: GeometryCurveBlockTypes.EaseInOutBack },\r\n            { label: \"EaseInElastic\", value: GeometryCurveBlockTypes.EaseInElastic },\r\n            { label: \"EaseOutElastic\", value: GeometryCurveBlockTypes.EaseOutElastic },\r\n            { label: \"EaseInOutElastic\", value: GeometryCurveBlockTypes.EaseInOutElastic },\r\n        ],\r\n    })\r\n    public type = GeometryCurveBlockTypes.EaseInOutSine;\r\n\r\n    /**\r\n     * Creates a new CurveBlock\r\n     * @param name defines the block name\r\n     */\r\n    public constructor(name: string) {\r\n        super(name);\r\n\r\n        this.registerInput(\"input\", NodeGeometryBlockConnectionPointTypes.AutoDetect);\r\n        this.registerOutput(\"output\", NodeGeometryBlockConnectionPointTypes.BasedOnInput);\r\n\r\n        this._outputs[0]._typeConnectionSource = this._inputs[0];\r\n\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeGeometryBlockConnectionPointTypes.Matrix);\r\n        this._inputs[0].excludedConnectionPointTypes.push(NodeGeometryBlockConnectionPointTypes.Int);\r\n    }\r\n\r\n    /**\r\n     * Gets the current class name\r\n     * @returns the class name\r\n     */\r\n    public override getClassName() {\r\n        return \"GeometryCurveBlock\";\r\n    }\r\n\r\n    /**\r\n     * Gets the input component\r\n     */\r\n    public get input(): NodeGeometryConnectionPoint {\r\n        return this._inputs[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the output component\r\n     */\r\n    public get output(): NodeGeometryConnectionPoint {\r\n        return this._outputs[0];\r\n    }\r\n\r\n    protected override _buildBlock() {\r\n        if (!this.input.isConnected) {\r\n            this.output._storedFunction = null;\r\n            this.output._storedValue = null;\r\n            return;\r\n        }\r\n\r\n        let func: (v: float) => any;\r\n\r\n        switch (this.type) {\r\n            case GeometryCurveBlockTypes.EaseInSine:\r\n                func = (v: float) => 1.0 - Math.cos((v * 3.1415) / 2.0);\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseOutSine:\r\n                func = (v: float) => Math.sin((v * 3.1415) / 2.0);\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseInOutSine:\r\n                func = (v: float) => -(Math.cos(v * 3.1415) - 1.0) / 2.0;\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseInQuad:\r\n                func = (v: float) => v * v;\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseOutQuad:\r\n                func = (v: float) => (1.0 - v) * (1.0 - v);\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseInOutQuad: {\r\n                func = (v: float) => (v < 0.5 ? 2.0 * v * v : 1.0 - Math.pow(-2.0 * v + 2.0, 2.0) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInCubic:\r\n                func = (v: float) => v * v * v;\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseOutCubic: {\r\n                func = (v: float) => 1.0 - Math.pow(1.0 - v, 3.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutCubic: {\r\n                func = (v: float) => (v < 0.5 ? 4.0 * v * v * v : 1.0 - Math.pow(-2.0 * v + 2.0, 3.0) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInQuart:\r\n                func = (v: float) => v * v * v * v;\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseOutQuart: {\r\n                func = (v: float) => 1.0 - Math.pow(1.0 - v, 4.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutQuart: {\r\n                func = (v: float) => (v < 0.5 ? 8.0 * v * v * v * v : 1.0 - Math.pow(-2.0 * v + 2.0, 4.0) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInQuint:\r\n                func = (v: float) => v * v * v * v * v;\r\n                break;\r\n            case GeometryCurveBlockTypes.EaseOutQuint: {\r\n                func = (v: float) => 1.0 - Math.pow(1.0 - v, 5.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutQuint: {\r\n                func = (v: float) => (v < 0.5 ? 16.0 * v * v * v * v * v : 1.0 - Math.pow(-2.0 * v + 2.0, 5.0) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInExpo: {\r\n                func = (v: float) => (v === 0.0 ? 0.0 : Math.pow(2.0, 10.0 * v - 10.0));\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseOutExpo: {\r\n                func = (v: float) => (v === 1.0 ? 1.0 : 1.0 - Math.pow(2.0, -10.0 * v));\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutExpo: {\r\n                func = (v: float) => (v === 0.0 ? 0.0 : v === 1.0 ? 1.0 : v < 0.5 ? Math.pow(2.0, 20.0 * v - 10.0) / 2.0 : (2.0 - Math.pow(2.0, -20.0 * v + 10.0)) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInCirc: {\r\n                func = (v: float) => 1.0 - Math.sqrt(1.0 - Math.pow(v, 2.0));\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseOutCirc: {\r\n                func = (v: float) => Math.sqrt(1.0 - Math.pow(v - 1.0, 2.0));\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutCirc: {\r\n                func = (v: float) => (v < 0.5 ? (1.0 - Math.sqrt(1.0 - Math.pow(2.0 * v, 2.0))) / 2.0 : (Math.sqrt(1.0 - Math.pow(-2.0 * v + 2.0, 2.0)) + 1.0) / 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInBack: {\r\n                func = (v: float) => 2.70158 * v * v * v - 1.70158 * v * v;\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseOutBack: {\r\n                func = (v: float) => 2.70158 * Math.pow(v - 1.0, 3.0) + 1.70158 * Math.pow(v - 1.0, 2.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutBack: {\r\n                func = (v: float) =>\r\n                    v < 0.5\r\n                        ? (Math.pow(2.0 * v, 2.0) * (3.5949095 * 2.0 * v - 2.5949095)) / 2.0\r\n                        : (Math.pow(2.0 * v - 2.0, 2.0) * (3.5949095 * (v * 2.0 - 2.0) + 3.5949095) + 2.0) / 2.0;\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInElastic: {\r\n                func = (v: float) => (v === 0.0 ? 0.0 : v === 1.0 ? 1.0 : -Math.pow(2.0, 10.0 * v - 10.0) * Math.sin((v * 10.0 - 10.75) * ((2.0 * 3.1415) / 3.0)));\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseOutElastic: {\r\n                func = (v: float) => (v === 0.0 ? 0.0 : v === 1.0 ? 1.0 : Math.pow(2.0, -10.0 * v) * Math.sin((v * 10.0 - 0.75) * ((2.0 * 3.1415) / 3.0)) + 1.0);\r\n                break;\r\n            }\r\n            case GeometryCurveBlockTypes.EaseInOutElastic: {\r\n                func = (v: float) =>\r\n                    v === 0.0\r\n                        ? 0.0\r\n                        : v == 1.0\r\n                          ? 1.0\r\n                          : v < 0.5\r\n                            ? -(Math.pow(2.0, 20.0 * v - 10.0) * Math.sin((20.0 * v - 11.125) * ((2.0 * 3.1415) / 4.5))) / 2.0\r\n                            : (Math.pow(2.0, -20.0 * v + 10.0) * Math.sin((20.0 * v - 11.125) * ((2.0 * 3.1415) / 4.5))) / 2.0 + 1.0;\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.output._storedFunction = (state) => {\r\n            const input = this.input.getConnectedValue(state);\r\n\r\n            switch (this.input.type) {\r\n                case NodeGeometryBlockConnectionPointTypes.Float: {\r\n                    return func(input);\r\n                }\r\n                case NodeGeometryBlockConnectionPointTypes.Vector2: {\r\n                    return new Vector2(func(input.x), func(input.y));\r\n                }\r\n                case NodeGeometryBlockConnectionPointTypes.Vector3: {\r\n                    return new Vector3(func(input.x), func(input.y), func(input.z));\r\n                }\r\n                case NodeGeometryBlockConnectionPointTypes.Vector4: {\r\n                    return new Vector4(func(input.x), func(input.y), func(input.z), func(input.w));\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        };\r\n\r\n        return this;\r\n    }\r\n\r\n    public override serialize(): any {\r\n        const serializationObject = super.serialize();\r\n\r\n        serializationObject.curveType = this.type;\r\n\r\n        return serializationObject;\r\n    }\r\n\r\n    public override _deserialize(serializationObject: any) {\r\n        super._deserialize(serializationObject);\r\n\r\n        this.type = serializationObject.curveType;\r\n    }\r\n\r\n    protected override _dumpPropertiesCode() {\r\n        const codeString = super._dumpPropertiesCode() + `${this._codeVariableName}.type = BABYLON.GeometryCurveBlockTypes.${GeometryCurveBlockTypes[this.type]};\\n`;\r\n        return codeString;\r\n    }\r\n}\r\n\r\nRegisterClass(\"BABYLON.GeometryCurveBlock\", GeometryCurveBlock);\r\n"]}